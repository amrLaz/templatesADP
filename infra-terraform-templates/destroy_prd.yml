
parameters:
- name: terraformFolder
  # displayName: 'Le nom du dossier où se situe le code Terraform par rapport à la racine du repos'
  type: string
  default: terraform
- name: AZURE_SERVICE_CONNECTION_NAME
  type: string
  default: ADP_DSIOC_DEV
- name: RESOURCE_GROUP_NAME
  type: string
- name: STORAGE_ACCOUNT_NAME
  type: string
- name: KEY_PRD
  type: string
- name: CONTAINER_NAME
  type: string
- name: vmImage
  type: string
- name: terraformVersion
  type: string
- name: commandOptions
  type: string


stages:
- stage: Destroy_Terraform_PRD
  dependsOn: Destroy_Terraform_DEV_VAL_Stage
  condition: succeeded('Destroy_Terraform_DEV_VAL_Stage')
  jobs:
  - deployment: 'Destroy_Terraform_Prod'
    displayName: 'Destroy PRD'
    pool:
      vmImage: ${{parameters.vmImage}}
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self 
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
            inputs:
              terraformVersion: ${{parameters.terraformVersion}}

          - task: TerraformTaskV4@4
            displayName: 'Terraform : Init'
            inputs:
              backendServiceArm: ${{parameters.AZURE_SERVICE_CONNECTION_NAME}}
              backendAzureRmResourceGroupName: ${{parameters.RESOURCE_GROUP_NAME}}
              backendAzureRmStorageAccountName: ${{parameters.STORAGE_ACCOUNT_NAME}}
              backendAzureRmContainerName: ${{parameters.CONTAINER_NAME}}
              backendAzureRmKey: ${{parameters.KEY_PRD}}
              workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.terraformFolder }}

          - task: TerraformTaskV4@4
            displayName: 'Terraform : destroy'
            inputs:
              command: destroy
              workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.terraformFolder }}
              environmentServiceNameAzureRM: ${{parameters.AZURE_SERVICE_CONNECTION_NAME}}
              commandOptions: -var env=prd $(commandOptions) -auto-approve 
              backendServiceArm: ${{parameters.AZURE_SERVICE_CONNECTION_NAME}}
              backendAzureRmResourceGroupName: ${{parameters.RESOURCE_GROUP_NAME}}
              backendAzureRmStorageAccountName: ${{parameters.STORAGE_ACCOUNT_NAME}}
              backendAzureRmContainerName: ${{parameters.CONTAINER_NAME}}
              backendAzureRmKey: ${{parameters.KEY_PRD}}
            
        
          
        